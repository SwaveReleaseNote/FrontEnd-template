{"version":3,"sources":["index.tsx"],"names":["react_1","require","Version_1","Date_1","SideMenubar_1","Index","_a","useState","noteBlocks","setNoteBlocks","textRef","useRef","useLayoutEffect","current","focus","handleCreateBlockEnterKeyPress","event","id","key","preventDefault","prev","__spreadArrays","length","content","createElement","className","map","noteBlock","ref","value","onChange","e","updatedNoteBlocks","__assign","target","handleContentChange","onKeyDown","placeholder","width","latestVersion","exports"],"mappings":"yfAAA,IAAAA,QAAAC,QAAA,SAUAC,UAAAD,QAAA,wBACAE,OAAAF,QAAA,qBACAG,cAAAH,QAAA,4BAOA,SAAwBI,QAEtB,IACMC,EAAAN,QAAAO,SAAA,qBAACC,EAAAF,EAAA,GAAYG,EAAAH,EAAA,GAGbI,EAAUV,QAAAW,OAA4B,MAE5CX,QAAAY,gBAAgB,WACdF,EAAQG,QAAQC,UAWqB,SAAjCC,EAAkCC,EAA2CC,GAC/D,UAAdD,EAAME,MACRF,EAAMG,iBATRV,EAAc,SAACW,GACb,OAAOC,eACDD,EAAI,CAAE,CAACH,GAAIG,EAAKA,EAAKE,OAAO,GAAGL,GAAG,EAAGM,QAAQ,SAsCvD,OACEvB,QAAA,QAAAwB,cAAA,MAAA,CAAKC,UAAU,4CACbzB,QAAA,QAAAwB,cAAA,MAAA,CAAKC,UAAU,6EACbzB,QAAA,QAAAwB,cAAA,MAAA,CAAKC,UAAU,eACZjB,EAAWkB,IAAI,SAACC,GAAc,OAC7B3B,QAAA,QAAAwB,cAAA,WAAA,CACAI,IAAKlB,EACLO,GAAG,aACHC,IAAKS,EAAUV,GACfY,MAAOF,EAAUJ,QACjBO,SAAU,SAACC,GAAM,OApCC,SAACf,EAAyCC,GACpE,IAAMe,EAAoBxB,EAAWkB,IAAI,SAACC,GACxC,OAAAA,EAAUV,KAAOA,EAAIgB,SAAAA,SAAA,GAAMN,GAAS,CAAEJ,QAASP,EAAMkB,OAAOL,QAAUF,IAExElB,EAAcuB,GAgCWG,CAAoBJ,EAAGJ,EAAUV,KAClDmB,UAAW,SAACL,GAAM,OAAAhB,EAA+BgB,EAAGJ,EAAUV,SAIhEjB,QAAA,QAAAwB,cAAA,WAAA,CAAUP,GAAG,eAAeoB,YAAY,UAG1CrC,QAAA,QAAAwB,cAACpB,cAAA,QAAW,CAACkC,MAAO,KAClBtC,QAAA,QAAAwB,cAAA,MAAA,CAAKC,UAAU,wCACbzB,QAAA,QAAAwB,cAACtB,UAAA,QAAO,CAACqC,cAvEO,UAwEhBvC,QAAA,QAAAwB,cAACrB,OAAA,QAAI,UA1EjBqC,QAAA,QAAAnC","file":"index.min.js","sourcesContent":["import React, { useState, useRef, useEffect, Component, KeyboardEvent, ChangeEvent, useLayoutEffect } from 'react'\r\nimport NoteField from 'components/note/NoteField'\r\nimport tableDataDevelopment from \"../tables/variables/tableDataDevelopment\";\r\nimport tableDataCheck from \"../tables/variables/tableDataCheck\";\r\nimport CheckTable from \"../tables/components/CheckTable\";\r\nimport tableDataColumns from \"../tables/variables/tableDataColumns\";\r\nimport tableDataComplex from \"../tables/variables/tableDataComplex\";\r\nimport DevelopmentTable from \"../tables/components/DevelopmentTable\";\r\nimport ColumnsTable from \"../tables/components/ColumnsTable\";\r\nimport ComplexTable from \"../tables/components/ComplexTable\";\r\nimport Version from './components/Version';\r\nimport Date from './components/Date';\r\nimport SideMenubar from './components/SideMenubar';\r\n\r\ninterface NoteBlock {\r\n  id: number;\r\n  content: string;\r\n}\r\n\r\nexport default function Index() {\r\n\r\n  const mockLatestVersion = \"3.6.5\";\r\n  const [noteBlocks, setNoteBlocks] = useState<NoteBlock[]>([\r\n    {id:1, content: \"\"},\r\n  ]);\r\n  const textRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    textRef.current.focus();\r\n  });\r\n\r\n  const addNewNoteBlock = () => {\r\n    setNoteBlocks((prev) => {\r\n      return (\r\n        [...prev, {id: prev[prev.length-1].id+1, content:''}] \r\n      );\r\n    });\r\n  };\r\n  \r\n  const handleCreateBlockEnterKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>, id: number) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      addNewNoteBlock();\r\n    }\r\n  }\r\n\r\n  const handleContentChange = (event: ChangeEvent<HTMLTextAreaElement>, id: number) => {\r\n    const updatedNoteBlocks = noteBlocks.map((noteBlock) =>\r\n      noteBlock.id === id ? { ...noteBlock, content: event.target.value } : noteBlock\r\n    );\r\n    setNoteBlocks(updatedNoteBlocks);\r\n  };\r\n\r\n  // 엔터 누를 때 마다 textarea 나오도록 만들기\r\n  // const newNoteBlock = document.getElementById(\"note-block\");\r\n\r\n  // function createNewNoteContent() {\r\n  //   const newNoteContent = document.createElement(\"textarea\");\r\n  //   newNoteContent.classList.add(\"note-content\");\r\n\r\n  //   newNoteBlock.appendChild(newNoteContent);\r\n\r\n  //   newNoteContent.focus();\r\n  // };\r\n\r\n  // document.addEventListener(\"keydown\", function(event) {\r\n  //   if (event.key === \"Enter\") {\r\n  //     event.preventDefault();\r\n  //     createNewNoteContent();\r\n  //   }\r\n  // })\r\n\r\n  return (\r\n    <div className=\"h-full grid-cols-1 gap-5 2xl:grid-cols-3\">\r\n      <div className=\"flex justify-between col-span-1 h-fit w-full xl:col-span-1 2xl:col-span-2\">\r\n        <div className='mt-5 w-full'>\r\n          {noteBlocks.map((noteBlock) => (\r\n            <textarea\r\n            ref={textRef}\r\n            id=\"note-block\"\r\n            key={noteBlock.id}\r\n            value={noteBlock.content}\r\n            onChange={(e) => handleContentChange(e, noteBlock.id)}\r\n            onKeyDown={(e) => handleCreateBlockEnterKeyPress(e, noteBlock.id)} />\r\n          ))\r\n\r\n          }\r\n          <textarea id=\"note-content\" placeholder='test'></textarea>\r\n        </div>\r\n        {/* 버전, 날짜 생성 카드 */}\r\n        <SideMenubar width={280}>\r\n          <div className=\"mt-5 flex-row justify-center h-auto \">\r\n            <Version latestVersion={mockLatestVersion} />\r\n            <Date />\r\n          </div>\r\n        </SideMenubar>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]}