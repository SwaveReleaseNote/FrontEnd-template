{"version":3,"sources":["InputText.tsx"],"names":[],"mappings":"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","file":"InputText.js","sourcesContent":["import React, { useState, useRef, useEffect, Component, KeyboardEvent, ChangeEvent, useLayoutEffect, FormEvent } from 'react'\r\nimport { useRecoilState } from 'recoil';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport { labelState } from 'context/atom';\r\n\r\ninterface NoteBlock {\r\n  id: number;\r\n  content: string;\r\n}\r\n\r\ninterface LabelImage {\r\n  content: string;\r\n}\r\n\r\nexport default function InputText() {\r\n  const [noteBlocks, setNoteBlocks] = useState<NoteBlock[]>([{ id: 1, content: \"\" },]);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [cursorPosition, setCursorPosition] = useState({ top: 0, left: 0 });\r\n  const [showLabelImage, setShowLabelImage] = useState();\r\n  const [labelImage, setLabeImage] = useRecoilState(labelState);\r\n  const textRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    textRef.current.focus();\r\n  });\r\n\r\n  const addNewNoteBlock = () => {\r\n    setNoteBlocks((prev) => {\r\n      return (\r\n        [...prev, { id: prev[prev.length - 1].id + 1, content: '' }]\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleCreateBlockEnterKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>, id: number) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      addNewNoteBlock();\r\n    }\r\n  }\r\n\r\n  const handleContentChange = (event: ChangeEvent<HTMLTextAreaElement>, id: number) => {\r\n    const updatedNoteBlocks = noteBlocks.map((noteBlock) =>\r\n      noteBlock.id === id ? { ...noteBlock, content: event.target.value } : noteBlock\r\n    );\r\n    setNoteBlocks(updatedNoteBlocks);\r\n  };\r\n\r\n  const handleTextAreaHeight = (event: FormEvent<HTMLTextAreaElement>, id: number) => {\r\n    textRef.current.style.height = 'auto';\r\n    textRef.current.style.height = textRef.current.scrollHeight + 'px';\r\n  }\r\n\r\n  const handleShowLabelsSlashKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>, id: number) => {\r\n    if (event.key === '/') {\r\n      // '/' 키가 눌렸을 때 드롭다운 메뉴를 표시\r\n      const { selectionStart, offsetLeft, offsetTop, offsetHeight } = event.currentTarget;\r\n      setCursorPosition({\r\n        top: offsetTop + offsetHeight,\r\n        left: offsetLeft + selectionStart * 8, // 8px 간격으로 표시하도록 설정 (임의로 설정)\r\n      });\r\n      setShowDropdown(true);\r\n    } else if (event.key === 'Backspace' || event.key === 'Escape') {\r\n      // 'Escape' 키가 눌렸을 때 드롭다운 메뉴를 닫음\r\n      setShowDropdown(false);\r\n    }\r\n  }\r\n\r\n  const handleShowLabel = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=' ml-10 mt-5 w-full flex-col'>\r\n      {noteBlocks.map((noteBlock) => (\r\n        <textarea\r\n          rows={1}\r\n          ref={textRef}\r\n          id=\"note-block\"\r\n          key={noteBlock.id}\r\n          value={noteBlock.content}\r\n          onChange={(event) => handleContentChange(event, noteBlock.id)}\r\n          onKeyDown={(event) => {\r\n            handleShowLabelsSlashKeyPress(event, noteBlock.id)\r\n            handleCreateBlockEnterKeyPress(event, noteBlock.id)\r\n          }}\r\n          onInput={(event) => handleTextAreaHeight(event, noteBlock.id)}\r\n          className='w-[80%] resize-none bg-lightPrimary outline-none'\r\n          placeholder='text를 입력해주세요' />\r\n      ))}\r\n      {showDropdown && (\r\n        <DropdownMenu cursorPosition={cursorPosition} onClose={() => setShowDropdown(false)} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]}