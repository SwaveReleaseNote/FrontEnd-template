{"version":3,"sources":["DropdownMenu.tsx"],"names":["react_1","require","DropdownMenu","props","buttonRef","useRef","cursorPosition","createElement","style","position","top","left","className","onKeyDown","event","onClick","current","textContent","handleSelectLavelClickEvent","ref","exports"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SAYA,SAAwBC,aAAaC,GACjC,IAAMC,EAAYJ,QAAAK,OAA0B,MACtCC,EAAiBH,EAAMG,eA2C7B,OACIN,QAAA,QAAAO,cAAA,MAAA,CACIC,MAAO,CAAEC,SAAU,WAAYC,IAAKJ,EAAeI,IAAKC,KAAML,EAAeK,OAE7EX,QAAA,QAAAO,cAAA,MAAA,CACIK,UAAU,qIACVC,UAAW,SAACC,KAIZC,QAAS,SAACD,IAhCc,WAChC,OAAQV,EAAUY,QAAQC,aACtB,IAAK,MAEGjB,QAAA,QAAAO,cAAA,MAAA,OA6BAW,KAGJlB,QAAA,QAAAO,cAAA,SAAA,CAAQY,IAAKf,EAAWQ,UAAU,oBAAkB,OAGpDZ,QAAA,QAAAO,cAAA,SAAA,CAAQY,IAAKf,EAAWQ,UAAU,oBAAkB,UAGpDZ,QAAA,QAAAO,cAAA,SAAA,CAAQY,IAAKf,EAAWQ,UAAU,oBAAkB,QAGpDZ,QAAA,QAAAO,cAAA,SAAA,CAAQY,IAAKf,EAAWQ,UAAU,oBAAkB,UAGpDZ,QAAA,QAAAO,cAAA,SAAA,CAAQY,IAAKf,EAAWQ,UAAU,oBAAkB,SAvEpEQ,QAAA,QAAAlB","file":"DropdownMenu.min.js","sourcesContent":["import React, { KeyboardEvent, useRef, MouseEvent } from 'react'\r\nimport Dropdown from 'components/dropdown';\r\nimport { IoMdInformationCircleOutline, IoMdNotificationsOutline } from 'react-icons/io';\r\nimport navbarimage from \"assets/img/layout/Navbar.png\";\r\nimport { BsArrowBarUp } from 'react-icons/bs';\r\nimport { ENETDOWN } from 'constants';\r\n\r\ninterface DropdownMenuProps {\r\n    cursorPosition: { top: number; left: number };\r\n    onClose: () => void;\r\n}\r\n\r\nexport default function DropdownMenu(props: DropdownMenuProps) {\r\n    const buttonRef = useRef<HTMLButtonElement>(null);\r\n    const cursorPosition = props.cursorPosition;\r\n\r\n    const handleChoiceLabelKeyPress = (event: KeyboardEvent<HTMLDivElement>) => {\r\n        // if(event.key === 'Home') { // 방향키 왼족\r\n        //     console.log('왼')\r\n        // }\r\n        // else if(event.key === 'PageUp') { // 위쪽\r\n        //     console.log('위')\r\n        // }\r\n        // else if(event.key === 'PageDown') { // 아래쪽\r\n        //     console.log('아래')\r\n        // }\r\n        // else if(event.key === 'End') { // 오른쪽\r\n        //     console.log('오')\r\n        // }\r\n    }\r\n\r\n    const handleSelectLavelkeyPress = (event: KeyboardEvent<HTMLDivElement>) => {\r\n        \r\n    }\r\n\r\n    const handleSelectLavelClickEvent = (event: MouseEvent<HTMLDivElement>) => {\r\n        switch (buttonRef.current.textContent) {\r\n            case \"new\":\r\n                return(\r\n                    <div></div>\r\n                )\r\n                break;\r\n            case \"update\":\r\n\r\n                break;\r\n            case \"stop\":\r\n\r\n                break;\r\n            case \"delete\":\r\n\r\n                break;\r\n            case \"etc\":\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{ position: 'absolute', top: cursorPosition.top, left: cursorPosition.left }}\r\n        >\r\n            <div\r\n                className=' transition-all ease-in-out flex flex-col z-10 bg-lightPrimary divide-y divide-gray-200 rounded-lg shadow-md w-44 dark:bg-gray-700'\r\n                onKeyDown={(event) => {\r\n                    handleChoiceLabelKeyPress(event)\r\n                    handleSelectLavelkeyPress(event)\r\n                }}\r\n                onClick={(event) => {\r\n                    handleSelectLavelClickEvent(event)\r\n                }}\r\n            >\r\n                <button ref={buttonRef} className='hover:bg-navy-50'>\r\n                    new\r\n                </button>\r\n                <button ref={buttonRef} className='hover:bg-navy-50'>\r\n                    update\r\n                </button>\r\n                <button ref={buttonRef} className='hover:bg-navy-50'>\r\n                    stop\r\n                </button>\r\n                <button ref={buttonRef} className='hover:bg-navy-50'>\r\n                    delete\r\n                </button>\r\n                <button ref={buttonRef} className='hover:bg-navy-50'>\r\n                    etc\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]}