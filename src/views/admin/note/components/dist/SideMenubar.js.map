{"version":3,"sources":["SideMenubar.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAoE;AAEpE,SAAwB,WAAW,CAAC,KAAU;IAA9C,iBA4CC;IA3CG,IAAM,KAAK,GAAW,KAAK,CAAC,KAAK,CAAC;IAC5B,IAAA,4BAAmC,EAAlC,cAAM,EAAE,eAA0B,CAAC;IACpC,IAAA,6BAAoC,EAAnC,iBAAS,EAAE,YAAwB,CAAC;IAC3C,IAAM,IAAI,GAAG,cAAM,EAAO,CAAC;IAE3B,IAAM,qBAAqB,GAAG;QAC1B,IAAI,SAAS,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,IAAI,CAAC,CAAC;SACjB;aAAM;YACH,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,CAAC;SAClB;IACL,CAAC,CAAC;IAEF,IAAM,sBAAsB,GAAG,UAAO,KAAuB;;;;;oBACrD,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;oBACxB,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;yBAClD,CAAA,MAAM,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,CAAA,EAArC,wBAAqC;oBACrC,qBAAM,IAAI,CAAC,CAAC,GAAG,CAAC,EAAA;;oBAAhB,SAAgB,CAAC;oBACjB,qBAAM,OAAO,CAAC,KAAK,CAAC,EAAA;;oBAApB,SAAoB,CAAC;;;;;SAE5B,CAAA;IAED,iBAAS,CAAC;QACN,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;QACzD,OAAO;YACH,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;QAChE,CAAC,CAAC;IACN,CAAC,CAAC,CAAA;IAEF,OAAO,CACH,0CAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAC,gDAAgD,EAAC,KAAK,EAAE,EAAC,SAAS,EAAG,6BAA6B,EAAC;QACzH,6CAAQ,OAAO,EAAE,qBAAqB,EAAE,SAAS,EAAC,UAAU,IACvD,MAAM;YACP,CAAC,CAAC,2CAAM,SAAS,EAAC,QAAQ,QAAS;YACnC,CAAC,CAAC,8DAAe,CACZ;QACT,8CACK,MAAM,IAAI,KAAK,CAAC,QAAQ,CACvB,CACJ,CACT,CAAA;AACL,CAAC;AA5CD,iCA4CC","file":"SideMenubar.js","sourcesContent":["import React, { Children, useEffect, useRef, useState } from 'react'\r\n\r\nexport default function SideMenubar(props: any) {\r\n    const width: number = props.width;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [xPosition, setX] = useState(-width);\r\n    const side = useRef<any>();\r\n\r\n    const handleSideMenubarOpen = () => {\r\n        if (xPosition < 0) {\r\n            setX(0);\r\n            setOpen(true);\r\n        } else {\r\n            setX(-280);\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleSideMenubarClose = async (event: { target: any; }) => {\r\n        let sideArea = side.current;\r\n        let sideCildren = side.current.contains(event.target);\r\n        if (isOpen && (!sideArea || !sideCildren)) {\r\n            await setX(-280);\r\n            await setOpen(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleSideMenubarClose);\r\n        return () => {\r\n            window.removeEventListener('click', handleSideMenubarClose);\r\n        };\r\n    })\r\n\r\n    return (\r\n        <div ref={side} className='relative mt-5 justify-end flex w-[${-width}px]' style={{transform : 'translatex(${-xPosition}px)'}}>\r\n            <button onClick={handleSideMenubarOpen} className='text-2xl'>\r\n                {isOpen \r\n                ? <span className=' top-0'>X</span> \r\n                : <span>⚙️</span>}\r\n            </button>\r\n            <div>\r\n                {isOpen && props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]}