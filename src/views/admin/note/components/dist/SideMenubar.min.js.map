{"version":3,"sources":["SideMenubar.tsx"],"names":["react_1","require","SideMenubar","props","handleSideMenubarClose","event","__awaiter","_this","sideArea","side","current","sideCildren","contains","target","isOpen","setX","_a","sent","setOpen","this","width","useState","_b","xPosition","useRef","useEffect","window","addEventListener","removeEventListener","createElement","ref","className","style","transform","onClick","children","exports"],"mappings":"y7CAAA,IAAAA,QAAAC,QAAA,SAEA,SAAwBC,YAAYC,GAgBD,SAAzBC,EAAgCC,GAAuB,OAAAC,UAAAC,OAAA,OAAA,EAAA,qFACrDC,EAAWC,EAAKC,QAChBC,EAAcF,EAAKC,QAAQE,SAASP,EAAMQ,SAC1CC,GAAYN,GAAaG,EAAzB,CAAA,EAAA,GACA,CAAA,EAAMI,GAAM,aACZ,OADAC,EAAAC,OACA,CAAA,EAAMC,GAAQ,WAAdF,EAAAC,uCArBZ,IAAAV,EAAAY,KACUC,EAAgBjB,EAAMiB,MACtBJ,EAAAhB,QAAAqB,UAAA,GAACP,EAAAE,EAAA,GAAQE,EAAAF,EAAA,GACTM,EAAAtB,QAAAqB,UAAAD,GAACG,EAAAD,EAAA,GAAWP,EAAAO,EAAA,GACZb,EAAOT,QAAAwB,SA4Bb,OAPAxB,QAAAyB,UAAU,WAEN,OADAC,OAAOC,iBAAiB,QAASvB,GAC1B,WACHsB,OAAOE,oBAAoB,QAASxB,MAKxCJ,QAAA,QAAA6B,cAAA,MAAA,CAAKC,IAAKrB,EAAMsB,UAAU,iDAAiDC,MAAO,CAACC,UAAY,gCAC3FjC,QAAA,QAAA6B,cAAA,SAAA,CAAQK,QA5Bc,WACtBX,EAAY,GACZR,EAAK,GACLG,GAAQ,KAERH,GAAM,KACNG,GAAQ,KAsBgCa,UAAU,YAC7CjB,EACCd,QAAA,QAAA6B,cAAA,OAAA,CAAME,UAAU,UAAQ,KACxB/B,QAAA,QAAA6B,cAAA,OAAA,KAAA,OAEN7B,QAAA,QAAA6B,cAAA,MAAA,KACKf,GAAUX,EAAMgC,WAxCjCC,QAAA,QAAAlC","file":"SideMenubar.min.js","sourcesContent":["import React, { Children, useEffect, useRef, useState } from 'react'\r\n\r\nexport default function SideMenubar(props: any) {\r\n    const width: number = props.width;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [xPosition, setX] = useState(-width);\r\n    const side = useRef<any>();\r\n\r\n    const handleSideMenubarOpen = () => {\r\n        if (xPosition < 0) {\r\n            setX(0);\r\n            setOpen(true);\r\n        } else {\r\n            setX(-280);\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleSideMenubarClose = async (event: { target: any; }) => {\r\n        let sideArea = side.current;\r\n        let sideCildren = side.current.contains(event.target);\r\n        if (isOpen && (!sideArea || !sideCildren)) {\r\n            await setX(-280);\r\n            await setOpen(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleSideMenubarClose);\r\n        return () => {\r\n            window.removeEventListener('click', handleSideMenubarClose);\r\n        };\r\n    })\r\n\r\n    return (\r\n        <div ref={side} className='relative mt-5 justify-end flex w-[${-width}px]' style={{transform : 'translatex(${-xPosition}px)'}}>\r\n            <button onClick={handleSideMenubarOpen} className='text-2xl'>\r\n                {isOpen \r\n                ? <span className=' top-0'>X</span> \r\n                : <span>⚙️</span>}\r\n            </button>\r\n            <div>\r\n                {isOpen && props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]}