{"version":3,"sources":["SidebarProject.tsx"],"names":[],"mappings":";;AAAA,+BAAuC;AACvC,qDAA+C;AAE/C,SAAwB,cAAc,CAAC,KAAU;IACvC,IAAA,sCAAqD,EAApD,iBAAS,EAAE,oBAAyC,CAAC;IAC5D,IAAI,QAAQ,GAAG,8BAAW,EAAE,CAAC;IAE7B,6DAA6D;IAC7D,IAAM,WAAW,GAAG,UAAC,SAAiB;QACpC,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,uCAAuC;IACvC,oCAAoC;IACpC,OAAO,CACH,6CAAQ,SAAS,EAAE,CAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,IAAI;YAC7D,CAAC,CAAC,yCAAyC;YAC3C,CAAC,CAAC,2BAA2B,2BACN,EAAE,KAAK,EAAE,SAAS,CAAC,WAAW,IAAG,SAAS,CAAC,WAAW,CAAU,CAC9F,CAAA;AAEL,CAAC;AAlBD,oCAkBC","file":"SidebarProject.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function SidebarProject(props: any) {\r\n    const [myProject, setMyProject] = useState(props.myProject);\r\n    let location = useLocation();\r\n  \r\n    // verifies if routeName is the one active (in browser input)\r\n    const activeRoute = (routeName: string) => {\r\n      return location.pathname.includes(routeName);\r\n    };\r\n    \r\n    // TODO: 프로젝트 선택할때 마다 프로젝트 세줄 요약 라우팅되도록\r\n    // TODO: 선택되어있는 프로젝트 릴리즈노트 리스트 보여지도록\r\n    return (\r\n        <option className={`${activeRoute(myProject.projectName) === true\r\n            ? \"font-bold text-navy-700 dark:text-white\"\r\n            : \"font-medium text-gray-600\"\r\n            } leading-1 ml-4 flex `} value={myProject.projectName}>{myProject.projectName}</option>\r\n    )\r\n    \r\n}"]}