{"version":3,"sources":["SidebarList.tsx"],"names":["react_1","require","noteListData_json_1","SidebarProject_1","SidebarNote_1","SidebarList","props","route","routeName","activeRoute","_b","useState","setProjectOption","_c","mock","projects","myProject","_d","releaseNotesInCurrentProject","setReleaseNotesInCurrentProject","map","project","createElement","notes","_a","note","releaseNotes","release","myNote","id","className","onChange","event","value","target","nowProjectName","currentProject","filter","projectName","selected","disabled","path","exports"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SACAC,oBAAAD,QAAA,iCACAE,iBAAAF,QAAA,oBACAG,cAAAH,QAAA,iBAaA,SAASI,YAAYC,SAEXC,EAAQD,EAAME,UACdC,EAAcH,EAAMG,YAEpBC,EAAAV,QAAAW,WAAgBC,GAAfF,EAAA,GAAeA,EAAA,IAChBG,EAAAb,QAAAW,SAAAT,oBAAA,QAAAY,KAAAC,UAACC,EAAAH,EAAA,GACDI,GADYJ,EAAA,GACZb,QAAAW,YAACO,EAAAD,EAAA,GAA8BE,EAAAF,EAAA,GAcjCF,EAAWC,EAAUI,IAAI,SAACC,GAAY,OAAArB,QAAA,QAAAsB,cAACnB,iBAAA,QAAc,CAACa,UAAWK,MAEjEE,EAAoC,QAA/BC,EAAGN,SAA4B,IAAAM,OAAA,EAAAA,EAAEJ,IAAI,SAACK,GAC3C,OAAAA,EAAKC,aAAaN,IAAI,SAACO,GAAY,OAAA3B,QAAA,QAAAsB,cAAClB,cAAA,QAAW,CAACwB,OAAQD,QAE5D,OACI3B,QAAA,QAAAsB,cAAA,QAAA,CAAOO,GAAG,+BACN7B,QAAA,QAAAsB,cAAA,MAAA,CAAKQ,UAAU,+BACX9B,QAAA,QAAAsB,cAAA,KAAA,CAAIQ,UAAU,yBACV9B,QAAA,QAAAsB,cAAA,KAAA,KAEItB,QAAA,QAAAsB,cAAA,SAAA,CAAQS,SAvBA,SAACC,GACzB,IAAMC,EAAQD,EAAME,OAAOD,MACvBE,EAAyBF,EAC7BrB,EAAiBqB,GAKjB,IAAMG,EAAgCpB,EAAUqB,OAAO,SAACJ,GAAuB,OAAAA,EAAMK,cAAgBH,IACrGhB,EAAgCiB,KAeZpC,QAAA,QAAAsB,cAAA,SAAA,CAAQiB,UAAQ,EAACC,UAAQ,EAACV,WAA0C,IAA5BrB,EAAYF,EAAMkC,MACpD,0CACA,6BACA,mBAGL1B,IAGTf,QAAA,QAAAsB,cAAA,KAAA,KACItB,QAAA,QAAAsB,cAAA,MAAA,CAAKQ,UAAU,2FACVP,OAS7BmB,QAAA,QAAerC","file":"SidebarList.min.js","sourcesContent":["import React, { useState } from 'react'\r\nimport data from '../mockData/noteListData.json'\r\nimport SidebarProject from './SidebarProject'\r\nimport SidebarNote from './SidebarNote'\r\n\r\ntype releaseNote = {\r\n    id: number;\r\n    version: string;\r\n};\r\n\r\ntype projectType = {\r\n    id: number;\r\n    projectName: String;\r\n    releaseNotes: releaseNote[];\r\n};\r\n\r\nfunction SidebarList(props: any) {\r\n\r\n    const route = props.routeName;\r\n    const activeRoute = props.activeRoute;\r\n\r\n    const [projectOption, setProjectOption] = useState<String>();\r\n    const [myProject, setMyProject] = useState<projectType[]>(data.mock.projects);\r\n    const [releaseNotesInCurrentProject, setReleaseNotesInCurrentProject] = useState<projectType[]>();\r\n\r\n    const changeProjectOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n        var nowProjectName: string = value;\r\n        setProjectOption(value);\r\n\r\n        // 현재 내가 선택한 option의 프로젝트만 받아 올 것\r\n        // 그 선택한 option 프로젝트가 위의 value 안에 담겨 있다.\r\n        // TODO: 제대로 안담긴다.\r\n        const currentProject: projectType[] = myProject.filter((value: projectType) => value.projectName === nowProjectName);\r\n        setReleaseNotesInCurrentProject(currentProject);\r\n    }\r\n\r\n    var projects = myProject.map((project) => <SidebarProject myProject={project} />);\r\n\r\n    var notes = releaseNotesInCurrentProject?.map((note: projectType) =>\r\n        note.releaseNotes.map((release) => <SidebarNote myNote={release} />));\r\n\r\n    return (\r\n        <aside id=\"sidebar-multi-level-sidebar\">\r\n            <div className=\"bg-gray-50 dark:bg-gray-800\">\r\n                <ul className=\"space-y-2 font-medium\">\r\n                    <li>\r\n                        {/* 프로젝트 리스트 옵션 부분 */}\r\n                        <select onChange={changeProjectOption}>\r\n                            <option selected disabled className={`${activeRoute(route.path) === true\r\n                                ? \"font-bold text-navy-700 dark:text-white\"\r\n                                : \"font-medium text-gray-600\"\r\n                                }`}>\r\n                                백에서 접근한 현재 프로젝트\r\n                            </option>\r\n                            {projects}\r\n                        </select>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\r\n                            {notes}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SidebarList;\r\n"]}