{"version":3,"sources":["SidebarList.tsx"],"names":["react_1","require","noteListData_json_1","SidebarProject_1","SidebarNote_1","SidebarList","props","routeName","activeRoute","_c","useState","selectedProject","setSelectedProject","_d","mock","projects","myProject","_e","releaseNoteList","setReleaseNoteList","_f","notes","_a","map","release","createElement","myNote","_b","project","className","onChange","event","value","target","filter","currentProject","projectName","console","log","releaseNotes","exports"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SACAC,oBAAAD,QAAA,iCACAE,iBAAAF,QAAA,oBACAG,cAAAH,QAAA,iBAaA,SAASI,YAAYC,GAEHA,EAAMC,UACAD,EAAME,oBAEpBC,EAAAT,QAAAU,WAACC,EAAAF,EAAA,GAAiBG,EAAAH,EAAA,GAClBI,EAAAb,QAAAU,SAAAR,oBAAA,QAAAY,KAAAC,UAACC,EAAAH,EAAA,GACDI,GADYJ,EAAA,GACZb,QAAAU,YAACQ,EAAAD,EAAA,GAAiBE,EAAAF,EAAA,GAClBG,EAAApB,QAAAU,WAUFW,GAVGD,EAAA,GAA8BA,EAAA,GAUV,QAAlBE,EAAGJ,SAAe,IAAAI,OAAA,EAAAA,EAAEC,IAAI,SAACC,GAAY,OAAAxB,QAAA,QAAAyB,cAACrB,cAAA,QAAW,CAACsB,OAAQF,OAC/DT,EAAoB,QAAZY,EAAGX,SAAS,IAAAW,OAAA,EAAAA,EAAEJ,IAAI,SAACK,GAAY,OAAA5B,QAAA,QAAAyB,cAACtB,iBAAA,QAAc,CAACa,UAAWY,MAEtE,OACI5B,QAAA,QAAAyB,cAAA,MAAA,CAAKI,UAAU,+BACX7B,QAAA,QAAAyB,cAAA,KAAA,CAAII,UAAU,yBACV7B,QAAA,QAAAyB,cAAA,KAAA,KAEIzB,QAAA,QAAAyB,cAAA,SAAA,CAAQK,SAhBI,SAACC,GACzB,IAAMC,EAAQD,EAAME,OAAOD,MAC3BpB,EAAmBI,EAAUkB,OAAO,SAACC,GAAgC,OAAAA,EAAeC,cAAgBJ,IAAO,IAC3GK,QAAQC,IAAI3B,GAEZQ,EAAmBR,EAAgB4B,gBAYlBxB,IAGTf,QAAA,QAAAyB,cAAA,KAAA,KAEIzB,QAAA,QAAAyB,cAAA,MAAA,CAAKI,UAAU,2FACVR,MAQzBmB,QAAA,QAAenC","file":"SidebarList.min.js","sourcesContent":["import React, { useState } from 'react'\r\nimport data from '../mockData/noteListData.json'\r\nimport SidebarProject from './SidebarProject'\r\nimport SidebarNote from './SidebarNote'\r\n\r\ntype releaseNote = {\r\n    id: number;\r\n    version: string;\r\n};\r\n\r\ntype projectType = {\r\n    id: number;\r\n    projectName: String;\r\n    releaseNotes: releaseNote[];\r\n};\r\n\r\nfunction SidebarList(props: any) {\r\n\r\n    const route = props.routeName;\r\n    const activeRoute = props.activeRoute;\r\n\r\n    const [selectedProject, setSelectedProject] = useState<projectType>();\r\n    const [myProject, setMyProject] = useState<projectType[]>(data.mock.projects);\r\n    const [releaseNoteList, setReleaseNoteList] = useState<releaseNote[]>();\r\n    const [releaseNotesInCurrentProject, setReleaseNotesInCurrentProject] = useState<projectType[]>();\r\n\r\n    const handleSelectProject = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value;\r\n        setSelectedProject(myProject.filter((currentProject: projectType) => currentProject.projectName === value)[0]);\r\n        console.log(selectedProject);\r\n\r\n        setReleaseNoteList(selectedProject.releaseNotes);\r\n    }\r\n\r\n    var notes = releaseNoteList?.map((release) => <SidebarNote myNote={release} />);\r\n    var projects = myProject?.map((project) => <SidebarProject myProject={project} />);\r\n\r\n    return (\r\n        <div className=\"bg-gray-50 dark:bg-gray-800\">\r\n            <ul className=\"space-y-2 font-medium\">\r\n                <li>\r\n                    {/* 프로젝트 리스트 옵션 부분 */}\r\n                    <select onChange={handleSelectProject}>\r\n                        {projects}\r\n                    </select>\r\n                </li>\r\n                <li>\r\n                    {/* TODO: 크기 고정해야합니다 */}\r\n                    <div className=\"text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\r\n                        {notes}\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarList;\r\n"]}