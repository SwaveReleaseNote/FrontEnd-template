{"version":3,"sources":["SidebarProject.tsx"],"names":["react_1","require","react_router_dom_1","SidebarProject","props","routeName","_a","useState","myProject","location","useLocation","createElement","className","projectName","pathname","includes","value","exports"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SACAC,mBAAAD,QAAA,oBAEA,SAAwBE,eAAeC,GAC7B,IAIeC,EAJfC,EAAAN,QAAAO,SAAAH,EAAAI,WAACA,EAAAF,EAAA,GACHG,GADcH,EAAA,GACHJ,mBAAAQ,eASf,OACIV,QAAA,QAAAW,cAAA,SAAA,CAAQC,YAAqD,KAP5CP,EAOiBG,EAAUK,YANvCJ,EAASK,SAASC,SAASV,IAO1B,0CACA,6BAA2B,wBACJW,MAAOR,EAAUK,aAAcL,EAAUK,aAf9EI,QAAA,QAAAd","file":"SidebarProject.min.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function SidebarProject(props: any) {\r\n    const [myProject, setMyProject] = useState(props.myProject);\r\n    let location = useLocation();\r\n  \r\n    // verifies if routeName is the one active (in browser input)\r\n    const activeRoute = (routeName: string) => {\r\n      return location.pathname.includes(routeName);\r\n    };\r\n    \r\n    // TODO: 프로젝트 선택할때 마다 프로젝트 세줄 요약 라우팅되도록\r\n    // TODO: 선택되어있는 프로젝트 릴리즈노트 리스트 보여지도록\r\n    return (\r\n        <option className={`${activeRoute(myProject.projectName) === true\r\n            ? \"font-bold text-navy-700 dark:text-white\"\r\n            : \"font-medium text-gray-600\"\r\n            } leading-1 ml-4 flex `} value={myProject.projectName}>{myProject.projectName}</option>\r\n    )\r\n    \r\n}"]}