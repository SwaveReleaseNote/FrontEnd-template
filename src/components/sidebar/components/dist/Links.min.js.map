{"version":3,"sources":["Links.tsx"],"names":["react_1","require","react_router_dom_1","DashIcon_1","SidebarList_1","exports","SidebarLinks","props","activeRoute","routeName","location","pathname","includes","useLocation","routes","createElement","Fragment","map","route","index","layout","Link","key","to","path","className","icon","name"],"mappings":"mCACA,IAAAA,QAAAC,QAAA,SACAC,mBAAAD,QAAA,oBACAE,WAAAF,QAAA,6BACAG,cAAAH,QAAA,iBAIaI,QAAAC,aAAe,SAACC,GAOP,SAAdC,EAAeC,GACnB,OAAOC,EAASC,SAASC,SAASH,GANpC,IAAIC,EAAWR,mBAAAW,cAEPC,EAAAP,EAAAO,OAsDR,OAAOd,QAAA,QAAAe,cAAAf,QAAA,QAAAgB,SAAA,KAAeF,EA5CNG,IAAI,SAACC,EAAOC,GACxB,GACmB,WAAjBD,EAAME,QACW,UAAjBF,EAAME,OAEN,OACEpB,QAAA,QAAAe,cAACb,mBAAAmB,KAAI,CAACC,IAAKH,EAAOI,GAAIL,EAAME,OAAS,IAAMF,EAAMM,MAC/CxB,QAAA,QAAAe,cAAA,MAAA,CAAKU,UAAU,2CACbzB,QAAA,QAAAe,cAAA,KAAA,CACEU,UAAU,iDACVH,IAAKH,GAELnB,QAAA,QAAAe,cAAA,OAAA,CACEU,WAA0C,IAA5BjB,EAAYU,EAAMM,MAC5B,2CACA,6BAGHN,EAAMQ,KAAOR,EAAMQ,KAAO1B,QAAA,QAAAe,cAACZ,WAAA,QAAQ,MAAK,KAE3CH,QAAA,QAAAe,cAAA,MAAA,KAEmB,iBAAfG,EAAMS,KACF3B,QAAA,QAAAe,cAACX,cAAA,QAAW,CAACK,UAAWS,EAAMS,KAAMnB,YAAaA,IAAuCR,QAAA,QAAAe,cAAA,IAAA,CACxFU,UAAW,yBAAmD,IAA5BjB,EAAYU,EAAMM,MAChD,0CACA,8BAGHN,EAAMS,QAKhBnB,EAAYU,EAAMM,MACjBxB,QAAA,QAAAe,cAAA,MAAA,CAAKU,UAAU,8EACb,WAWlBpB,QAAA,QAAeA,QAAAC","file":"Links.min.js","sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport DashIcon from \"components/icons/DashIcon\";\r\nimport SidebarList from \"./SidebarList\";\r\n\r\n// chakra imports\r\n\r\nexport const SidebarLinks = (props: { routes: RoutesType[] }): JSX.Element => {\r\n  // Chakra color mode\r\n  let location = useLocation();\r\n\r\n  const { routes } = props;\r\n\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName: string) => {\r\n    return location.pathname.includes(routeName);\r\n  };\r\n\r\n  // TODO: 릴리즈 노트일 경우 Sidebar에 List로 나오도록 설정\r\n\r\n  const createLinks = (routes: RoutesType[]) => {\r\n    return routes.map((route, index) => {\r\n      if (\r\n        route.layout === \"/admin\" ||\r\n        route.layout === \"/auth\"\r\n      ) {\r\n        return (\r\n          <Link key={index} to={route.layout + \"/\" + route.path}>\r\n            <div className=\"relative mb-3 flex hover:cursor-pointer\">\r\n              <li\r\n                className=\"my-[3px] flex cursor-pointer items-center px-8\"\r\n                key={index}\r\n              >\r\n                <span\r\n                  className={`${activeRoute(route.path) === true\r\n                    ? \"font-bold text-brand-500 dark:text-white\"\r\n                    : \"font-medium text-gray-600\"\r\n                    }`}\r\n                >\r\n                  {route.icon ? route.icon : <DashIcon />}{\" \"}\r\n                </span>\r\n                <div>\r\n                  {\r\n                    route.name === \"Release Note\"\r\n                      ? <SidebarList routeName={route.name} activeRoute={activeRoute} />                      : <p\r\n                        className={`leading-1 ml-4 flex ${activeRoute(route.path) === true\r\n                          ? \"font-bold text-navy-700 dark:text-white\"\r\n                          : \"font-medium text-gray-600\"\r\n                          }`}\r\n                      >\r\n                        {route.name}\r\n                      </p>\r\n                  }\r\n                </div>\r\n              </li>\r\n              {activeRoute(route.path) ? (\r\n                <div className=\"absolute right-0 top-px h-9 w-1 rounded-lg bg-brand-500 dark:bg-brand-400\" />\r\n              ) : null}\r\n            </div>\r\n          </Link>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  // BRAND\r\n  return <>{createLinks(routes)}</>;\r\n};\r\n\r\nexport default SidebarLinks;\r\n"]}